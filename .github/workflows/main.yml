name: Print Updated Resources

on:
  push:
    branches:
      - master

jobs:
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  # Event `pull_request`: Compare the last commit of the main branch or last remote commit of the PR branch -> to the current commit of a PR branch.
  # ------------------------------------------------------------------------------------------------------------------------------------------------
  changed_files:
    runs-on: ubuntu-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
      - name: Get all changed markdown files
        id: changed-markdown-files
        uses: tj-actions/changed-files@v44
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
             **.md

      - name: List all changed files markdown files
        if: steps.changed-markdown-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
  create-target:
    needs: changed_files
    runs-on: ubuntu-latest
    outputs:
      jar-path: ${{ steps.setup-jar-path.outputs.jar-path }}
    
    steps:
      - name: Setup Jar File Path
        id: setup-jar-path
        run: echo "jar-path=academy-md-html-0.2.jar" >> $GITHUB_ENV
      
      - name: Download Release builder Artifact from Repository "academy-md-html"
        run: |
          curl -fSL -o ${{ env.jar-path }} \
          "https://github.com/camunda-academy/academy-md-html/releases/download/v0.2/${{ env.jar-path }}" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
      
      - name: Upload Jar to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: academy-md-html-jar
          path: ${{ env.jar-path }}
          
      - name: Execute JAR file
        run: java -jar ${{ env.jar-path }} ./en

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
        
      - name: Find and Upload Each File
        run: |
          for file in target/*; do
            echo "Uploading $file"
            curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Content-Type: $(file --mime-type -b $file)" \
                 --data-binary @"$file" \
                 "${{ steps.create_release.outputs.upload_url }}?name=$(basename $file)"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

